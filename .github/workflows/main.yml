# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  tests:
    name: Testing Python ${{matrix.python-version}} on ${{matrix.os}}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9"]
        
    runs-on: ${{matrix.os}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Anaconda ${{matrix.python-version}} setup
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{matrix.python-version}}

      - name: Dependency installation
        shell: bash -l {0}
        run: |
          conda info -a
          pip install -r requirements.txt
          pip install coverage coveralls blosc

      - name: Package installation
        shell: bash -l {0}
        run: |
          pip install -e .

      - name: Qt5 defaults
        shell: bash -l {0}
        run: |
          if [ "$RUNNER_OS" == "Linux" ]
          then
            sudo apt-get install qt5-default
          fi

          if [ "$RUNNER_OS" == "Windows"]
          then
            choco install qt5-default
          fi

      - name: Headless display setup
        uses: pyvista/setup-headless-display-action@v1  

      - name: Testing on ref -> ${{github.head_ref || github.ref_name}}
        shell: bash -l {0}
        run: |
          if [ "$RUNNER_OS" == "Linux" ]
          then
            export COVERAGE_PROCESS_START=$PWD/.coveragerc
            mkdir -p -- $CONDA/lib/python${{matrix.python-version}}/site-packages
            touch $CONDA/lib/python${{matrix.python-version}}/site-packages/coverage.pth
            printf "import coverage; coverage.process_startup()" > $CONDA/lib/python${{matrix.python-version}}/site-packages/coverage.pth;
            nosetests --with-coverage --cover-package=online_monitor
          fi

          if [ "$RUNNER_OS" == "Windows"]
          then
            nosetests online_monitor
          fi
          
        if: success()

#      - name: Coveralls
#        shell: bash -l {0}
#        run: coveralls --data_file .coverage.*
  